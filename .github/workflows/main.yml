# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push events
  push:
    branches: 
    - main 
    - preview 

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  Update-DBR-Core-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: [self-hosted, r3]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: clear space
        run: |
          cd /home/ubuntu
          [ -d DBRDocCore ] && rm -rf DBRDocCore
          [ -d barcode-reader-docs ] && rm -rf barcode-reader-docs 
          [ -d Docs-Template-Repo-Preview-R3 ] && rm -rf Docs-Template-Repo-Preview-R3
          cd /home/ubuntu

      - name: Build the full site - main
        run: |
          cd /home/ubuntu
          mkdir -p DBRDocCore
          git clone --depth 1 https://github.com/dynamsoft-docs/barcode-reader-docs.git barcode-reader-docs
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview-R3
          cp -rfp ./barcode-reader-docs/* ./DBRDocCore/
          cp -rfp ./Docs-Template-Repo-Preview-R3/* ./DBRDocCore/
          cd DBRDocCore && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DBRDocCore/_site/
          server-dir: /www.dynamsoft.com/barcode-reader/docs/core/        

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/barcode-reader/docs/core/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DBR-Server-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: [self-hosted, r3]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: clear space
        run: |
          cd /home/ubuntu 
          [ -d DBRDocServer ] && rm -rf DBRDocServer 
          [ -d barcode-reader-docs-server ] && rm -rf barcode-reader-docs-server
          [ -d Docs-Template-Repo-Preview-R3 ] && rm -rf Docs-Template-Repo-Preview-R3
          
      - name: Build the full site (not incremental)
        run: |
          cd /home/ubuntu
          mkdir -p DBRDocServer
          git clone --depth 1 https://github.com/dynamsoft-docs/barcode-reader-docs-server.git barcode-reader-docs-server
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview-R3
          cp -rfp ./barcode-reader-docs-server/* ./DBRDocServer/
          cp -rfp ./Docs-Template-Repo-Preview-R3/* ./DBRDocServer/
          cd DBRDocServer && bundle exec jekyll build
          #python3 /home/ubuntu/ftp.py /home/ubuntu/DBRDocServer/_site/ ./www.dynamsoft.com/barcode-reader/docs/server/ prod

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DBRDocServer/_site/
          server-dir: /www.dynamsoft.com/barcode-reader/docs/server/        

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/barcode-reader/docs/server/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DBR-Mobile-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ -d DBRDocMobile ] && rm -rf DBRDocMobile
          [ -d barcode-reader-docs-mobile ] && rm -rf barcode-reader-docs-mobile
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DBRDocMobile ] && mkdir -p DBRDocMobile

          git clone --depth 1 https://github.com/dynamsoft-docs/barcode-reader-docs-mobile.git barcode-reader-docs-mobile
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./barcode-reader-docs-mobile/* ./DBRDocMobile/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DBRDocMobile/
          cd DBRDocMobile && bundle exec jekyll build --incremental

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DBRDocMobile/_site/
          server-dir: /www.dynamsoft.com/barcode-reader/docs/mobile/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/barcode-reader/docs/mobile/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DBR-Js-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: clear space
        run: |
          cd /home/ubuntu 
          [ -d DBRDocJS ] && rm -rf DBRDocJS 
          [ -d barcode-reader-docs-js ] && rm -rf barcode-reader-docs-js
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
      # Runs a set of commands using the runners shell
      - name: Build the site - Main
        run: |
          cd /home/ubuntu
          mkdir -p DBRDocJS
          git clone --depth 1 https://github.com/dynamsoft-docs/barcode-reader-docs-js.git barcode-reader-docs-js
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./barcode-reader-docs-js/* ./DBRDocJS/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DBRDocJS/
          cd DBRDocJS && bundle install && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DBRDocJS/_site/
          server-dir: /www.dynamsoft.com/barcode-reader/docs/web/        

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/barcode-reader/docs/web/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DCV-Core-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Build the site
        run: |
          cd /home/ubuntu
          [ -d DCVDocCore ] && rm -rf DCVDocCore
          [ -d capture-vision-docs ] && rm -rf capture-vision-docs
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DCVDocCore ] && mkdir -p DCVDocCore
          git clone --depth 1  https://github.com/dynamsoft-docs/capture-vision-docs.git capture-vision-docs
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./capture-vision-docs/* ./DCVDocCore/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DCVDocCore/
          cd DCVDocCore && bundle install && bundle exec jekyll build


      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DCVDocCore/_site/
          server-dir: /www.dynamsoft.com/capture-vision/docs/core/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/capture-vision/docs/core/*\"]" ${{ secrets.WEBHOOK_URL }}

  Update-DCV-Server-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Build the site - Main
        run: |
          cd /home/ubuntu
          [ -d DCVDocServer ] && rm -rf DCVDocServer
          [ -d capture-vision-docs-server ] && rm -rf capture-vision-docs-server
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DCVDocServer ] && mkdir -p DCVDocServer
          git clone --depth 1  https://github.com/dynamsoft-docs/capture-vision-docs-server.git capture-vision-docs-server
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./capture-vision-docs-server/* ./DCVDocServer/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DCVDocServer/
          cd DCVDocServer && bundle install && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DCVDocServer/_site/
          server-dir: /www.dynamsoft.com/capture-vision/docs/server/        

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/capture-vision/docs/server/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DCV-Mobile-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ -d DCVDocMobile ] && rm -rf DCVDocMobile
          [ -d capture-vision-docs-mobile ] && rm -rf capture-vision-docs-mobile
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DCVDocMobile ] && mkdir -p DCVDocMobile

          git clone --depth 1 https://github.com/dynamsoft-docs/capture-vision-docs-mobile.git capture-vision-docs-mobile
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./capture-vision-docs-mobile/* ./DCVDocMobile/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DCVDocMobile/
          cd DCVDocMobile && bundle exec jekyll build --incremental

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DCVDocMobile/_site/
          server-dir: /www.dynamsoft.com/capture-vision/docs/mobile/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/capture-vision/docs/mobile/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DCV-Js-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Build the site - Main
        run: |
          cd /home/ubuntu
          [ -d DCVDocJS ] && rm -rf DCVDocJS
          [ -d capture-vision-docs-js ] && rm -rf capture-vision-docs-js
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DCVDocJS ] && mkdir -p DCVDocJS
          git clone --depth 1 https://github.com/dynamsoft-docs/capture-vision-docs-js.git capture-vision-docs-js
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./capture-vision-docs-js/* ./DCVDocJS/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DCVDocJS/
          cd DCVDocJS && bundle install && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DCVDocJS/_site/
          server-dir: /www.dynamsoft.com/capture-vision/docs/web/        

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/capture-vision/docs/web/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DLR-Core-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ -d DLRDocCore ] && rm -rf DLRDocCore
          [ -d label-recognition-docs ] && rm -rf label-recognition-docs
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DLRDocCore ] && mkdir -p DLRDocCore
          git clone --depth 1 https://github.com/dynamsoft-docs/label-recognition-docs.git label-recognition-docs
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./label-recognition-docs/* ./DLRDocCore/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DLRDocCore/
          cd DLRDocCore && bundle exec jekyll build --incremental

      - name: Sync files - Main Site
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DLRDocCore/_site/
          server-dir: /www.dynamsoft.com/label-recognition/docs/core/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/label-recognition/docs/core/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DLR-Server-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ -d DLRDocServer ] && rm -rf DLRDocServer
          [ -d label-recognition-docs-server ] &&   rm -rf label-recognition-docs-server
          [ -d Docs-Template-Repo ] && rm -rf Docs-Template-Repo
          [ ! -d DLRDocServer ] && mkdir -p DLRDocServer
          git clone --depth 1 https://github.com/Dynamsoft-Docs/label-recognition-docs-server.git label-recognition-docs-server
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo
          cp -rfp ./label-recognition-docs-server/* ./DLRDocServer/
          cp -rfp ./Docs-Template-Repo/* ./DLRDocServer/
          cd DLRDocServer && bundle install && bundle exec jekyll build

      - name: Sync files - Main Site
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DLRDocServer/_site/
          server-dir: /www.dynamsoft.com/label-recognition/docs/server/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/label-recognition/docs/server/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DLR-Mobile-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ -d DLRDocMobile ] && rm -rf DLRDocMobile
          [ -d label-recognition-docs-mobile ] &&   rm -rf label-recognition-docs-mobile
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DLRDocMobile ] && mkdir -p DLRDocMobile
          git clone --depth 1 https://github.com/dynamsoft-docs/label-recognition-docs-mobile.git label-recognition-docs-mobile
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./label-recognition-docs-mobile/* ./DLRDocMobile/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DLRDocMobile/
          cd DLRDocMobile && bundle install && bundle exec jekyll build

      - name: Sync files - Main Site
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DLRDocMobile/_site/
          server-dir: /www.dynamsoft.com/label-recognition/docs/mobile/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/label-recognition/docs/mobile/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DLR-Js-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: clear space
        run: |
          cd /home/ubuntu 
          [ -d DLRJSDoc ] && rm -rf DLRJSDoc
          [ -d label-recognition-docs-js ] && rm -rf label-recognition-docs-js
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          cd /home/ubuntu

      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ ! -d DLRJSDoc ] && mkdir -p DLRJSDoc
          git clone --depth 1 https://github.com/dynamsoft-docs/label-recognition-docs-js.git
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./label-recognition-docs-js/* ./DLRJSDoc/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DLRJSDoc/
          cd DLRJSDoc && bundle install && bundle exec jekyll build

      - name: Sync files - Main Site
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DLRJSDoc/_site/
          server-dir: /www.dynamsoft.com/label-recognition/docs/web/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/label-recognition/docs/web/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DDN-Core-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ -d DDNDoc ] && rm -rf DDNDoc
          [ -d document-normalizer-docs ] && rm -rf document-normalizer-docs
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DDNDoc ] && mkdir -p DDNDoc
          git clone --depth 1 https://github.com/dynamsoft-docs/document-normalizer-docs.git document-normalizer-docs
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./document-normalizer-docs/* ./DDNDoc/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DDNDoc/
          cd DDNDoc && bundle install && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DDNDoc/_site/
          server-dir: /www.dynamsoft.com/document-normalizer/docs/core/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/document-normalizer/docs/core/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DDN-Server-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ -d DDNDocServer ] && rm -rf DDNDocServer
          [ -d document-normalizer-docs-server ] && rm -rf document-normalizer-docs-server
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DDNDocServer ] && mkdir -p DDNDocServer
          git clone --depth 1 https://github.com/dynamsoft-docs/document-normalizer-docs-server.git document-normalizer-docs-server
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./document-normalizer-docs-server/* ./DDNDocServer/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DDNDocServer/
          cd DDNDocServer && bundle install && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DDNDocServer/_site/
          server-dir: /www.dynamsoft.com/document-normalizer/docs/server/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/document-normalizer/docs/server/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DDN-Mobile-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ -d DDNDocMobile ] && rm -rf DDNDocMobile
          [ -d document-normalizer-docs-mobile ] && rm -rf document-normalizer-docs-mobile
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DDNDocMobile ] && mkdir -p DDNDocMobile
          git clone --depth 1 https://github.com/dynamsoft-docs/document-normalizer-docs-mobile.git document-normalizer-docs-mobile
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./document-normalizer-docs-mobile/* ./DDNDocMobile/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DDNDocMobile/
          cd DDNDocMobile && bundle install && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DDNDocMobile/_site/
          server-dir: /www.dynamsoft.com/document-normalizer/docs/mobile/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/document-normalizer/docs/mobile/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DDN-Js-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ -d DDNDocJS ] && rm -rf DDNDocJS
          [ -d document-normalizer-docs-js ] && rm -rf document-normalizer-docs-js
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DDNDocJS ] && mkdir -p DDNDocJS
          git clone --depth 1 https://github.com/dynamsoft-docs/document-normalizer-docs-js.git document-normalizer-docs-js
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./document-normalizer-docs-js/* ./DDNDocJS/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DDNDocJS/
          cd DDNDocJS && bundle install && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DDNDocJS/_site/
          server-dir: /www.dynamsoft.com/document-normalizer/docs/web/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/document-normalizer/docs/web/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DCP-Core-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: clear space
        run: |
          cd /home/ubuntu 
          [ -d DCPDoc ] && rm -rf DCPDoc
          [ -d code-parser-docs ] && rm -rf code-parser-docs
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          cd /home/ubuntu

      - name: Build the site
        run: |
          cd /home/ubuntu
          mkdir -p DCPDoc
          git clone --depth 1 https://github.com/dynamsoft-docs/code-parser-docs.git code-parser-docs
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./code-parser-docs/* ./DCPDoc/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DCPDoc/
          cd DCPDoc && bundle install && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DCPDoc/_site/
          server-dir: /www.dynamsoft.com/code-parser/docs/core/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/code-parser/docs/core/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DCP-Server-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: clear space
        run: |
          cd /home/ubuntu 
          [ -d DCPDocServer ] && rm -rf DCPDocServer
          [ -d code-parser-docs-server ] && rm -rf code-parser-docs-server
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          cd /home/ubuntu

      - name: Build the site
        run: |
          cd /home/ubuntu
          mkdir -p DCPDocServer
          git clone --depth 1 https://github.com/dynamsoft-docs/code-parser-docs-server.git code-parser-docs-server
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./code-parser-docs-server/* ./DCPDocServer/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DCPDocServer/
          cd DCPDocServer && bundle install && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DCPDocServer/_site/
          server-dir: /www.dynamsoft.com/code-parser/docs/server/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/code-parser/docs/server/*\"]" ${{ secrets.WEBHOOK_URL }}


  #Update-DCP-Mobile-On-Preview-Change:
  #  if: ${{ github.ref == 'refs/heads/preview' }}
  #  # The type of runner that the job will run on
  #  runs-on: self-hosted

  Update-DCP-Js-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: clear space
        run: |
          cd /home/ubuntu 
          [ -d DCPDocJS ] && rm -rf DCPDocJS
          [ -d code-parser-docs-js ] && rm -rf code-parser-docs-js
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          cd /home/ubuntu

      - name: Build the site
        run: |
          cd /home/ubuntu
          mkdir -p DCPDocJS
          git clone --depth 1 https://github.com/dynamsoft-docs/code-parser-docs-js.git code-parser-docs-js
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./code-parser-docs-js/* ./DCPDocJS/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DCPDocJS/
          cd DCPDocJS && bundle install && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DCPDocJS/_site/
          server-dir: /www.dynamsoft.com/code-parser/docs/web/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/code-parser/docs/web/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DCE-Core-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted
    steps:
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ -d DCEDocCore ] && rm -rf DCEDocCore
          [ -d camera-enhancer-docs ] && rm -rf camera-enhancer-docs
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DCEDocCore ] && mkdir -p DCEDocCore
          git clone --depth 1 https://github.com/dynamsoft-docs/camera-enhancer-docs.git camera-enhancer-docs
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./camera-enhancer-docs/* ./DCEDocCore/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DCEDocCore/
          cd DCEDocCore && bundle install && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DCEDocCore/_site/
          server-dir: /www.dynamsoft.com/camera-enhancer/docs/core/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/camera-enhancer/docs/core/*\"]" ${{ secrets.WEBHOOK_URL }}


  #Update-DCE-Server-On-Preview-Change:
  #  if: ${{ github.ref == 'refs/heads/preview' }}
  #  # The type of runner that the job will run on
  #  runs-on: self-hosted


  Update-DCE-Mobile-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted
    steps:
      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ -d DCEDocMobile ] && rm -rf DCEDocMobile
          [ -d camera-enhancer-docs-mobile ] && rm -rf camera-enhancer-docs-mobile
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DCEDocMobile ] && mkdir -p DCEDocMobile
          git clone --depth 1 https://github.com/dynamsoft-docs/camera-enhancer-docs-mobile.git camera-enhancer-docs-mobile
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./camera-enhancer-docs-mobile/* ./DCEDocMobile/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DCEDocMobile/
          cd DCEDocMobile && bundle install && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DCEDocMobile/_site/
          server-dir: /www.dynamsoft.com/camera-enhancer/docs/mobile/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/camera-enhancer/docs/mobile/*\"]" ${{ secrets.WEBHOOK_URL }}


  Update-DCE-JS-On-Preview-Change:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted
    steps:
      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ -d DCEDocJS ] && rm -rf DCEDocJS
          [ -d camera-enhancer-docs-js ] && rm -rf camera-enhancer-docs-js
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DCEDocJS ] && mkdir -p DCEDocJS
          git clone --depth 1 https://github.com/dynamsoft-docs/camera-enhancer-docs-js.git camera-enhancer-docs-js
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./camera-enhancer-docs-js/* ./DCEDocJS/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DCEDocJS/
          cd DCEDocJS && bundle install && bundle exec jekyll build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DCEDocJS/_site/
          server-dir: /www.dynamsoft.com/camera-enhancer/docs/web/

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/camera-enhancer/docs/web/*\"]" ${{ secrets.WEBHOOK_URL }}



#  build:
#    # The type of runner that the job will run on
#    runs-on: self-hosted
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      #- uses: actions/checkout@v2
#
#      # Runs a set of commands using the runners shell
#          
#      - name: Build DLS Doc
#        run: |
#          cd /home/ubuntu
#          [ ! -d DLSDoc ] && mkdir -p DLSDoc
#          [ ! -d license-server-docs ] && git clone --depth 1 https://github.com/dynamsoft-docs/license-server-docs.git
#          cd license-server-docs && git pull && cd .. && cp -rfp ./license-server-docs/* ./DLSDoc/
#          cp -rfp ./Docs-Template-Repo/* ./DLSDoc/
#          cd DLSDoc && bundle exec jekyll build
#          python3 /home/ubuntu/ftp.py /home/ubuntu/DLSDoc/_site/ ./www.dynamsoft.com/license-server/docs/ prod
          
#      - name: Build DNT Doc
#        run: |
#          cd /home/ubuntu
#          [ ! -d DNTDoc ] && mkdir -p DNTDoc
#          [ ! -d dotnet-twain-docs ] && git clone --depth 1 https://github.com/dynamsoft-docs/dotnet-twain-docs.git
#          cd dotnet-twain-docs && git pull && cd .. && cp -rfp ./dotnet-twain-docs/* ./DNTDoc/
#          cp -rfp ./Docs-Template-Repo/* ./DNTDoc/
#          cd DNTDoc && bundle exec jekyll build
#          python3 /home/ubuntu/ftp.py /home/ubuntu/DNTDoc/_site/ ./www.dynamsoft.com/dotnet-twain/docs/ prod
#
#      - name: Build DWT Doc
#        run: |
#          cd /home/ubuntu
#          [ ! -d DWTDoc ] && mkdir -p DWTDoc
#          [ ! -d web-twain-docs ] && git clone --depth 1 https://github.com/dynamsoft-docs/web-twain-docs.git
#          cd web-twain-docs && git pull && cd .. && cp -rfp ./web-twain-docs/* ./DWTDoc/
#          cp -rfp ./Docs-Template-Repo/* ./DWTDoc/
#          cd DWTDoc && bundle exec jekyll build
#          python3 /home/ubuntu/ftp.py /home/ubuntu/DWTDoc/_site/ ./www.dynamsoft.com/web-twain/docs/ prod
#
#      - name: Build Company Doc
#        run: |
#          cd /home/ubuntu
#          [ ! -d CompanyDoc ] && mkdir -p CompanyDoc
#          [ ! -d company-docs ] && git clone --depth 1 https://github.com/dynamsoft-docs/company-docs.git
#          cd company-docs && git pull && cd .. && cp -rfp ./company-docs/* ./CompanyDoc/
#          cp -rfp ./Docs-Template-Repo/* ./CompanyDoc/
#          cd CompanyDoc && bundle exec jekyll build
#          python3 /home/ubuntu/ftp.py /home/ubuntu/CompanyDoc/_site/ ./www.dynamsoft.com/company/docs/ prod
